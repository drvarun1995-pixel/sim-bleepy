#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');

console.log('üöÄ Performance Check Starting...\n');

// 1. Check bundle size
console.log('üì¶ Checking bundle size...');
try {
  const buildOutput = execSync('npm run build', { encoding: 'utf8', stdio: 'pipe' });
  
  // Extract build size information
  const lines = buildOutput.split('\n');
  const sizeLines = lines.filter(line => 
    line.includes('First Load JS') || 
    line.includes('Route') || 
    line.includes('‚óã') || 
    line.includes('‚óè') ||
    line.includes('Œª') ||
    line.includes('‚óê')
  );
  
  console.log('Build Results:');
  sizeLines.forEach(line => console.log(`  ${line.trim()}`));
  
} catch (error) {
  console.log('‚ùå Build failed:', error.message);
}

console.log('\nüîç Performance Metrics to Check:');
console.log('1. Open browser Developer Tools (F12)');
console.log('2. Go to Network tab');
console.log('3. Refresh the page');
console.log('4. Check these metrics:');
console.log('   - Total page load time');
console.log('   - Largest bundle size');
console.log('   - Number of requests');
console.log('   - Time to First Byte (TTFB)');

console.log('\nüìä Lighthouse Performance Audit:');
console.log('1. Open Chrome DevTools (F12)');
console.log('2. Go to Lighthouse tab');
console.log('3. Select "Performance"');
console.log('4. Click "Generate report"');
console.log('5. Check Core Web Vitals:');
console.log('   - LCP (Largest Contentful Paint) - should be < 2.5s');
console.log('   - FID (First Input Delay) - should be < 100ms');
console.log('   - CLS (Cumulative Layout Shift) - should be < 0.1');

console.log('\n‚ö° Quick Performance Tips:');
console.log('‚úÖ Use dynamic imports for heavy components');
console.log('‚úÖ Optimize images with next/image');
console.log('‚úÖ Enable compression');
console.log('‚úÖ Use CDN for static assets');
console.log('‚úÖ Implement proper caching headers');

console.log('\nüéØ Current Optimizations Applied:');
console.log('‚úÖ SWC minification enabled');
console.log('‚úÖ Image optimization configured');
console.log('‚úÖ Font optimization enabled');
console.log('‚úÖ Bundle splitting implemented');
console.log('‚úÖ Performance monitoring added');

console.log('\nüìà Performance Monitoring:');
console.log('Check browser console for real-time metrics:');
console.log('- LCP: Largest Contentful Paint');
console.log('- FID: First Input Delay');
console.log('- CLS: Cumulative Layout Shift');
console.log('- Page Load Performance breakdown');

console.log('\n‚úÖ Performance check complete!');
